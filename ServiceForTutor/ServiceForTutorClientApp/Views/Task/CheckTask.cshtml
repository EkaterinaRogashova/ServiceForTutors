@using ServiceForTutorContracts.ViewModels
@model AssignedTaskViewModel
@{
    ViewData["Title"] = "Проверка выполненного задания";
}

<body>
    <div class="container mt-5">
        <h1 class="display-4">@ViewData["Title"]</h1>

        <div class="container">
            <div class="row justify-content-center" style="margin-top: 20px;">
                <div class="col-md-6">
                    <div class="p-4" style="background-color: #DBCEF6; border-radius: 10px;">
                        <h3 class="text-center mt-3" style="color: #300E36;">@Model.TaskName</h3>
                        <p style="font-weight: bold;">Темa: @Model.TaskTopic</p>
                    </div>
                </div>
                <div class="col-md-6 text-center">
                    <img src="https://cdn-icons-png.flaticon.com/512/5058/5058451.png" alt="" style="max-width: 40%; margin-left: -20px; height: auto; border-radius: 10px;">
                </div>
            </div>
        </div>

        <div class="mt-4" id="questionsList">
    <h4 class="text-center" style="color: #300E36;">Вопросы к заданию</h4>
    <form method="post" action="@Url.Action("SaveGrades", "Task")">
        <input type="hidden" name="taskId" value="@Model.Id" />
        @if (Model.Questions != null && Model.Questions.Any())
        {
            foreach (var question in Model.Questions)
            {
                <div class="d-flex mb-3" style="width: 100%;">
                    <div class="flex-fill" style="min-width: 70%; max-width: 90%;">
                        <div class="card" style="background-color: #F5F4FF; border-radius: 0;">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <h5 class="card-title mb-0">@question.TaskText</h5>
                                    <span style="font-size: 0.9rem; color: #6c757d;">Тип: @question.TypeQuestion</span>
                                </div>
                                <hr />
                                @{
                                    var studentAnswer = Model.Answers.FirstOrDefault(a => a.QuestionId == question.Id);
                                    var selectedScore = studentAnswer?.Score ?? 0.0f;
                                }
                                        
                                <div class="d-flex justify-content-between align-items-center">
                                <p class="mb-0">Максимальный балл: <strong>@question.MaxScore</strong></p>
                                    @if (question.TypeQuestion == "Краткий ответ" || question.TypeQuestion == "Развернутый ответ" || question.TypeQuestion == "Прикрепление файла")
                                    {
                                        <div>
                                            <input type="number"
                                                    name="grades[@question.Id]"
                                                    class="form-control"
                                                    style="width: 100px;"
                                                    value="@selectedScore"
                                                    min="0"
                                                    max="@question.MaxScore"
                                                    step="0.01" />
                                        </div>
                                    }
                                    else
                                    {
                                        <p>Текущая оценка: @selectedScore</p>
                                    }
                                </div>
                                <div class="mt-3">
                                    <h6>Ответ ученика:</h6>
                                    @{
                                        studentAnswer = Model.Answers.FirstOrDefault(a => a.QuestionId == question.Id);
                                    }
                                    @if (studentAnswer != null)
                                    {
                                        var answersList = studentAnswer.GetAnswer();
                                        if (answersList != null && answersList.Any())
                                        {
                                            foreach (var answer in answersList)
                                            {
                                                <p>@answer</p> <!-- Каждый ответ на новой строке -->
                                            }
                                        }
                                        else
                                        {
                                            <p>Нет ответа</p>
                                        }
                                    }
                                    else
                                    {
                                        <p>Ответ не найден</p>
                                    }
                                    @if (question.Answers != null && question.Answers.Any())
                                    {
                                        <ul class="list-group list-group-flush">
                                            @foreach (var answer in question.GetAnswers())
                                            {
                                                if (answer != null)
                                                {
                                                    <li class="list-group-item d-flex justify-content-between align-items-center border-bottom">
                                                        <span>@answer</span>
                                                        @if (question.GetCorrectAnswers().Contains(answer))
                                                        {
                                                            <span class="badge bg-success ms-2">Правильный ответ</span>
                                                        }
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    }
                                </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                <div class="text-center mt-4">
                    <button type="submit" class="btn" name="action" value="finish" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px;">Сохранить и отправить</button>
                    <button type="submit" class="btn" name="action" value="save" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px;">Сохранить и вернуться позже</button>
                </div>
            </form>
        </div>

    </div>
</body>
