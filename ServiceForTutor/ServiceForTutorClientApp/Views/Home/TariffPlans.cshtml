@using ServiceForTutorContracts.ViewModels
@model List<TariffPlanViewModel>
@{
    ViewData["Title"] = "Тарифы";
}

<div class="container mt-5">
    <h2 class="text-center">@ViewData["Title"]</h2>
    @if (APIClient.Client != null)
    {
        @if (APIClient.Client.Role == "Admin")
        {
            <div class="row mb-4">
                <div class="col-md-8">
                    <a href="@Url.Action("CreateTariffPlan", "Home")" class="nav-link btn rounded btn-block" style="background-color: #9ACCFF; color: #300E36; border-radius: 20px;">Создать тарифный план</a>
                </div>
                <div class="col-md-4">
                    <form method="get" class="d-flex align-items-end">
                        <div class="me-2">
                            <label for="statusFilter" class="visually-hidden">Фильтр по статусу:</label>
                            <select class="form-control" id="statusFilter" name="statusFilter">
                                <option value="active">Активные</option>
                                <option value="inactive">Неактивные</option>
                            </select>
                        </div>
                        <button type="submit" class="btn">Применить фильтр</button>
                    </form>
                </div>
            </div>
        }
    }
    <div class="row">
        @foreach (var tariff in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title text-center">@tariff.Name</h5>
                        <p class="card-text">@tariff.Description</p>
                        <p class="text-center">На этом тарифе Вам доступно:</p>
                        <p class="text">- прикрепление до @tariff.StudentCount ученика(-ов)</p>
                        <p class="text">- возможность создать до @tariff.TaskCount заданя(-ий)</p>
                        <h6 class="card-subtitle mb-2 text-muted text-center">@tariff.Cost.ToString("C")</h6>
                        <p class="text-center">Срок действия: @tariff.PeriodInDays дней</p>
                        @if (APIClient.Client != null)
                        {
                            if(APIClient.Client.Role == "Tutor")
                            {
                                <div class="text-center">
                                    <a href="@Url.Action("Subscribe", new { planId = tariff.Id })" class="btn btn-primary tariff-button" data-plan-id="@tariff.Id">Оформить</a>
                                </div>
                            }
                            @if (APIClient.Client.Role == "Admin")
                            {
                                <div class="text-center">
                                    <a href="@Url.Action("ChangeStatus", "Home", new { id = tariff.Id })" class="btn btn-primary" onclick="return confirm('Вы уверены, что хотите изменить статус?');" style="margin-top: 20px;">Изменить статус</a>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Информация</h5>
                </div>
                <div class="modal-body">
                    <p id="errorMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="successModalLabel">Успех!</h5>
                </div>
                <div class="modal-body">
                    <p id="successMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="confirmationRequired" tabindex="-1" role="dialog" aria-labelledby="confirmationRequiredModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationRequiredModalLabel">Подтвердите действие</h5>
                </div>
                <div class="modal-body">
                    <p id="confirmationRequiredText">У Вас уже приобретен другой тариф. Вы уверены, что хотите изменить тариф?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-bs-dismiss="modal" style="border-radius: 10px; background-color: #9ACCFF; color: black;">Отмена</button>
                    <button type="button" id="confirmChangeTariff" class="btn" style="border-radius: 10px; background-color: #E3EFFF; color: black;">Подтвердить</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border-radius: 10px;
    }

    .card .card-body {
        background-color: #f8f9fa; /* светлый фон для карточки */
    }

    .btn {
        background-color: #9ACCFF; /* Цвет кнопки */
    }

</style>

@section Scripts {
    
    <script>
        $(document).ready(function () {
            var errorMessage = @Html.Raw(Json.Serialize(TempData["ErrorMessage"]));
            var successMessage = @Html.Raw(Json.Serialize(TempData["SuccessMessage"]));

            if (successMessage) {
                $('#successMessage').text(successMessage);
                $('#successModal').modal('show');
            }
            if (errorMessage) {
                $('#errorMessage').text(errorMessage);
                $('#errorModal').modal('show');
            }

            var confirmationRequired = @Html.Raw(Json.Serialize(TempData["ConfirmationRequired"]));

            if (confirmationRequired) {
                $('#confirmationRequired').modal('show');

                $('#confirmChangeTariff').on('click', function () {

                    var newTariffId = @Html.Raw(Json.Serialize(TempData["NewTariffId"] ?? 0)); // Получаем новый тариф
                    // Отправляем запрос на сервер с подтверждением
                    $.post('/Home/Subscribe', { planId: newTariffId, confirmChange: true }, function (response) {
                        // Обработка ответа, например, покажите сообщение об успехе или редирект
                        window.location.href = '/Home/TariffPlans'; // Перенаправьте на страницу тарифов
                    });
                });
            }
        });

    </script>
}