@using ServiceForTutorContracts.ViewModels
@model List<ScheduleViewModel>

@{
    ViewData["Title"] = "Расписание";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .time-slot-button {
            width: 100%;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center">
            <button class="btn btn-light" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px;" onclick="window.history.back();">
                <i class="fas fa-arrow-left"></i>Назад
            </button>
            <h1>@ViewData["Title"]</h1>
        </div>
        
        @if (APIClient.Client.Role == "Tutor")
        {
            <button class="btn btn-success"
                    data-bs-toggle="modal"
                    data-bs-target="#addTimeSlotModal" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px; margin-right: 40px; margin-bottom: 20px; margin-top: 10px;">
                Добавить время
            </button>
        }
        <div class="btn-group" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-secondary" onclick="previousWeek()">Предыдущая неделя</button>
            <button type="button" class="btn btn-secondary" onclick="nextWeek()">Следующая неделя</button>
        </div>
        <script>
            function previousWeek() {
                alert("Функция 'previousWeek' еще не реализована.  Нужен AJAX запрос.");
            }

            function nextWeek() {
                alert("Функция 'nextWeek' еще не реализована. Нужен AJAX запрос.");
            }
        </script>
        @{
            DateTime currentDate = DateTime.Today;
            var datesOfWeek = GetDatesOfWeek(DateTime.Today);
            var uniqueTimes = new HashSet<DateTime>(Model.Select(x => x.DateTimeStart));

        }
        <table class="table table-bordered" id="scheduleTable">
            <thead>
                <tr>
                    <th>Время</th>
                    @foreach (var day in datesOfWeek)
                    {
                        <th>@(day.ToString("dd MMMM")) <span style="font-size:smaller;">(@day.ToString("ddd"))</span></th>
                    }
                </tr>
            </thead>
            <tbody>
    @foreach (var day in datesOfWeek)
    {
        foreach (var time in uniqueTimes.Where(t => t.Date == day))
        {
            <tr>
                <td>@time.ToString("HH:mm")</td>
                @foreach (var d in datesOfWeek)
                {
                    var timeSlot = Model.FirstOrDefault(m => m.DateTimeStart == time && m.DateTimeStart.Date == d);
                    if (timeSlot != null)
                    {
                        var duration = (timeSlot.DateTimeEnd - timeSlot.DateTimeStart).TotalMinutes;
                        var buttonHeight = Math.Max(20, (int)duration * 20);
                        <td>
                            @if (APIClient.Client.Role == "Student")
                            {
                                            <button class="time-slot-button" data-bs-toggle="modal" data-bs-target="#reservation"
                                        data-id="@timeSlot.Id"
                                        data-date="@timeSlot.DateTimeStart.ToString("yyyy-MM-dd")"
                                        data-start-time="@timeSlot.DateTimeStart.ToString("HH:mm")"
                                        data-end-time="@timeSlot.DateTimeEnd.ToString("HH:mm")"
                                        data-tutor-id="@timeSlot.TutorId"
                                        data-status="@timeSlot.Status">
                                    @timeSlot.Status
                                </button>
                            } else{
                                            <button class="time-slot-button" data-bs-toggle="modal" data-bs-target="#viewTimeSlot"
                                        data-id="@timeSlot.Id"
                                        data-date="@timeSlot.DateTimeStart.ToString("yyyy-MM-dd")"
                                        data-start-time="@timeSlot.DateTimeStart.ToString("HH:mm")"
                                        data-end-time="@timeSlot.DateTimeEnd.ToString("HH:mm")"
                                        data-tutor-id="@timeSlot.TutorId"
                                        data-status="@timeSlot.Status">
                                     @timeSlot.Status
                                </button>
                            }
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                }
            </tr>
        }
    }
</tbody>
        </table>
        @functions {
            List<DateTime> GetDatesOfWeek(DateTime date)
            {
                List<DateTime> dates = new List<DateTime>();
                DateTime firstDay = date.AddDays(-((int)date.DayOfWeek == 0 ? 6 : (int)date.DayOfWeek - 1));
                for (int i = 0; i < 7; i++)
                {
                    dates.Add(firstDay.AddDays(i));
                }
                return dates;
            }
        }


        <div class="modal fade" id="addTimeSlotModal" tabindex="-1" role="dialog" aria-labelledby="addTimeSlotModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addTimeSlotModalLabel">Добавить время</h5>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Закрыть">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form asp-action="AddTimeSlot" method="post">
                        <input type="hidden" id="slotStatus" name="status" value="Available" />
                        <div class="modal-body">
                            <div class="form-group">
                                <label for="slotDate">Выбор даты</label>
                                <input type="date" class="form-control" id="slotDate" name="date" required />
                            </div>
                            <div class="form-group">
                                <label for="slotStartTime">Время начала</label>
                                <input type="time" class="form-control" id="slotStartTime" name="timeStart" required />
                            </div>
                            <div class="form-group">
                                <label for="duration">Продолжительность занятия</label>
                                <select class="form-control" id="duration" name="duration" required>
                                    <option value="0.5">30 минут</option>
                                    <option value="1">1 час</option>
                                    <option value="1.5">1,5 часа</option>
                                    <option value="2">2 часа</option>
                                    <option value="2.5">2,5 часа</option>
                                    <option value="3">3 часа</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="slotEndTime">Время окончания</label>
                                <input type="time" class="form-control" id="slotEndTime" name="endTime" readonly />
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                            <button type="submit" class="btn" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px;">Сохранить</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="reservation" tabindex="-1" role="dialog" aria-labelledby="reservationLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reservationLabel">Бронирование</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Reservation" method="post">

                    <div class="modal-body">
                        <input type="hidden" id="modalId" name="id" />
                        <input type="hidden" id="modalTutorId" name="tutorId" />
                        <div class="mb-3">
                            <label>Дата:</label>
                            <p id="modalDate"></p>
                        </div>
                        <div class="mb-3">
                            <label>День недели:</label>
                            <p id="modalDayOfWeek"></p>
                        </div>
                        <div class="mb-3">
                            <label>Время начала:</label>
                            <p id="modalStartTime"></p>
                        </div>
                        <div class="mb-3">
                            <label>Время окончания:</label>
                            <p id="modalEndTime"></p>
                        </div>
                        <div class="mb-3">
                            <label>ФИО репетитора:</label>
                            <p id="modalTutorId" name="tutorId"></p>
                        </div>
                        <div class="form-group">
                            <label>Статус:</label>
                            <p id="modalStatus"></p>
                        </div>
                        <div class="mb-3">
                            <label for="duration">Продолжительность занятия:</label>
                            <p id="modalDuration"></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                        <div id="actionButtons"></div>
                        <button type="submit" class="btn" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px;">Забронировать</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="modal fade" id="viewTimeSlot" tabindex="-1" role="dialog" aria-labelledby="viewTimeSlotLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="viewTimeSlotLabel">Бронирование</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="DeleteBook" method="post">
                    <div class="modal-body">
                        <input type="hidden" id="modalId" name="id" />
                        <input type="hidden" id="modalTutorId" name="tutorId" />
                        <div class="mb-3">
                            <label>Дата:</label>
                            <p id="modalDate"></p>
                        </div>
                        <div class="mb-3">
                            <label>День недели:</label>
                            <p id="modalDayOfWeek"></p>
                        </div>
                        <div class="mb-3">
                            <label>Время начала:</label>
                            <p id="modalStartTime"></p>
                        </div>
                        <div class="mb-3">
                            <label>Время окончания:</label>
                            <p id="modalEndTime"></p>
                        </div>
                        <div class="form-group">
                            <label>Статус:</label>
                            <p id="modalStatus"></p>
                        </div>
                        <div class="mb-3">
                            <label for="duration">Продолжительность занятия:</label>
                            <p id="modalDuration"></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                        <button id="cancelButton" type="submit" class="btn" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px;">Отменить занятие</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
</body>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $('#reservation').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var id = button.data('id');
            var date = button.data('date');
            var startTime = button.data('start-time');
            var endTime = button.data('end-time');
            var tutorId = button.data('tutor-id');
            var status = button.data('status');
            var dayOfWeek = new Date(date).toLocaleDateString('ru-RU', { weekday: 'long' });
            var duration = (new Date(`2000-01-01 ${endTime}`) - new Date(`2000-01-01 ${startTime}`)) / (1000 * 60);

            var modal = $(this);
            modal.find('#modalId').val(id);
            modal.find('#modalDate').text(date);
            modal.find('#modalDayOfWeek').text(dayOfWeek);
            modal.find('#modalStartTime').text(startTime);
            modal.find('#modalEndTime').text(endTime);
            modal.find('#modalTutorId').val(tutorId);
            modal.find('#modalStatus').text(status);
            modal.find('#modalDuration').text(duration / 60 + " часа");

            $('#actionButtons').empty();

            if (status === "Booked") {
                $('#actionButtons').append('');
            }
        });

        $('#viewTimeSlot').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var id = button.data('id');
            var date = button.data('date');
            var startTime = button.data('start-time');
            var endTime = button.data('end-time');
            var tutorId = button.data('tutor-id');
            var status = button.data('status');
            var dayOfWeek = new Date(date).toLocaleDateString('ru-RU', { weekday: 'long' });
            var duration = (new Date(`2000-01-01 ${endTime}`) - new Date(`2000-01-01 ${startTime}`)) / (1000 * 60);

            var modal = $(this);
            modal.find('#modalId').val(id);
            modal.find('#modalDate').text(date);
            modal.find('#modalDayOfWeek').text(dayOfWeek);
            modal.find('#modalStartTime').text(startTime);
            modal.find('#modalEndTime').text(endTime);
            modal.find('#modalTutorId').val(tutorId);
            modal.find('#modalStatus').text(status);
            modal.find('#modalDuration').text(duration / 60 + " часа");

            if (status === "Booked") {
                $('#cancelButton').prop('disabled', false); // Активируем кнопку
            } else {
                $('#cancelButton').prop('disabled', true); // Деактивируем кнопку
            }
        });
    </script>
}
</html>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const startTimeInput = document.getElementById('slotStartTime');
        const durationSelect = document.getElementById('duration');
        const endTimeInput = document.getElementById('slotEndTime');

        // Функция для вычисления времени окончания
        function calculateEndTime() {
            const startTime = startTimeInput.value;
            const durationHours = parseFloat(durationSelect.value);

            if (startTime) {
                // Получаем часы и минуты начала занятия
                const [hours, minutes] = startTime.split(':').map(Number);
                // Конвертируем все в минуты
                const totalMinutes = hours * 60 + minutes + (durationHours * 60);
                // Вычисляем окончание занятия
                const endHours = Math.floor(totalMinutes / 60) % 24; // Учтем 24 часа
                const endMinutes = totalMinutes % 60;

                // Устанавливаем время окончания
                endTimeInput.value = `${String(endHours).padStart(2, '0')}:${String(endMinutes).padStart(2, '0')}`;
            }
        }

        // Добавляем обработчики событий
        startTimeInput.addEventListener('change', calculateEndTime);
        durationSelect.addEventListener('change', calculateEndTime);
    });
</script>



<style>
.time-slot-button {
    width: 90px;
    background-color: plum;
    color: white;
    border: none;
    cursor: pointer;
    min-height: 30px; /* Минимальная высота кнопки для видимости */
    transition: height 0.3s; /* Плавный переход высоты, если требуется */
}

.time-slot-button:hover {
    background-color: mediumorchid; /* Цвет при наведении для улучшения UX */
}
</style>