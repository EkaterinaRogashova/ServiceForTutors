@using ServiceForTutorContracts.ViewModels
@model List<UserViewModel>
@{
    ViewData["Title"] = "Мои ученики";
}

<div class="container mt-5">
    <div class="text-center">
        <h1 class="display-4">Мои ученики</h1>
    </div>

    <div class="text-center mt-4">
        @{

            <div class="d-flex mt-4">
                <div class="flex-shrink-0" style="width: 20%;">
                    <form asp-action="CreateInvitationCode" method="post">
                        <button type="submit" class="btn" style="background-color: #C5A8EA; color: #300E36; border-radius: 10px; width: 100%;">Сформировать код приглашения</button>
                    </form>
                </div>

                <div class="flex-grow-1 ms-3">
                    @if (ViewBag.InvitationCode != null)
                    {
                        <p>
                            Сгенерированный код приглашения:
                            <span id="invitationCode">@ViewBag.InvitationCode</span>
                            <button class="btn btn-secondary btn-sm" onclick="copyCode()">Скопировать</button>
                        </p>
                    }
                </div>
            </div>
            if (Model == null)
            {
                <h3 class="display-4">Нет прикрепленных учеников</h3>
                return;
            }
            else
            {
                <table class="table table-striped table-bordered mt-4">
                    <thead class="thead-light">
                        <tr>
                            <th>Фамилия</th>
                            <th>Имя</th>
                            <th>Отчество</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Surname)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                                <td>
                                    <a class="btn btn-danger btn-sm" asp-action="DeleteStudent" asp-route-id="@item.Id" onclick="return confirm('Вы уверены, что хотите удалить ученика?');">Удалить</a>
                                    <a class="btn btn btn-secondary btn-sm" asp-action="ViewTasksForStudent" asp-route-id="@item.Id">Назначенные задания</a>
                                </td>
                            </tr>
                        }
                    </tbody>
            </table>
            }
        }
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
    }

    .table {
        margin-top: 20px;
    }

    .btn {
        transition: background-color 0.3s ease;
    }

    .btn-light {
        background-color: #e9ecef; /* Светло-серый цвет */
        color: #495057; /* Тёмный текст для контраста */
    }

        .btn-light:hover {
            background-color: #d3d3d3; /* Более тёмный светло-серый при наведении */
        }

    .row {
        display: flex; /* Включаем Flexbox */
        flex-wrap: wrap; /* Разрешаем перенос на следующую строку при необходимости */
        align-items: center; /* Выравнивание по вертикали */
    }

    .col-md-4 {
        flex: 1; /* Делаем элементы одинаковой ширины */
        margin-right: 10px; /* Добавляем отступ между элементами */
    }

    .btn-block {
        width: 100%;
        background-color: black;
    }
</style>
